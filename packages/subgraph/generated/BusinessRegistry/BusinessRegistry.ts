// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class BusinessMetadataUpdated extends ethereum.Event {
  get params(): BusinessMetadataUpdated__Params {
    return new BusinessMetadataUpdated__Params(this);
  }
}

export class BusinessMetadataUpdated__Params {
  _event: BusinessMetadataUpdated;

  constructor(event: BusinessMetadataUpdated) {
    this._event = event;
  }

  get business(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oldURI(): string {
    return this._event.parameters[1].value.toString();
  }

  get newURI(): string {
    return this._event.parameters[2].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BusinessMetricsUpdated extends ethereum.Event {
  get params(): BusinessMetricsUpdated__Params {
    return new BusinessMetricsUpdated__Params(this);
  }
}

export class BusinessMetricsUpdated__Params {
  _event: BusinessMetricsUpdated;

  constructor(event: BusinessMetricsUpdated) {
    this._event = event;
  }

  get business(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get totalRaised(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get totalRepaid(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BusinessRegistered extends ethereum.Event {
  get params(): BusinessRegistered__Params {
    return new BusinessRegistered__Params(this);
  }
}

export class BusinessRegistered__Params {
  _event: BusinessRegistered;

  constructor(event: BusinessRegistered) {
    this._event = event;
  }

  get business(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get metadataURI(): string {
    return this._event.parameters[2].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BusinessVerified extends ethereum.Event {
  get params(): BusinessVerified__Params {
    return new BusinessVerified__Params(this);
  }
}

export class BusinessVerified__Params {
  _event: BusinessVerified;

  constructor(event: BusinessVerified) {
    this._event = event;
  }

  get business(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get verifier(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BusinessRegistry__businessesResult {
  value0: string;
  value1: string;
  value2: Address;
  value3: boolean;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;
  value10: BigInt;
  value11: BigInt;
  value12: BigInt;
  value13: BigInt;

  constructor(
    value0: string,
    value1: string,
    value2: Address,
    value3: boolean,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
    value10: BigInt,
    value11: BigInt,
    value12: BigInt,
    value13: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
    this.value13 = value13;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    map.set("value11", ethereum.Value.fromUnsignedBigInt(this.value11));
    map.set("value12", ethereum.Value.fromUnsignedBigInt(this.value12));
    map.set("value13", ethereum.Value.fromUnsignedBigInt(this.value13));
    return map;
  }

  getName(): string {
    return this.value0;
  }

  getMetadataURI(): string {
    return this.value1;
  }

  getOwner(): Address {
    return this.value2;
  }

  getVerified(): boolean {
    return this.value3;
  }

  getTotalRaised(): BigInt {
    return this.value4;
  }

  getTotalRepaid(): BigInt {
    return this.value5;
  }

  getOnTimePayments(): BigInt {
    return this.value6;
  }

  getLatePayments(): BigInt {
    return this.value7;
  }

  getDefaultedAmount(): BigInt {
    return this.value8;
  }

  getCampaignCount(): BigInt {
    return this.value9;
  }

  getSuccessfulCampaigns(): BigInt {
    return this.value10;
  }

  getActiveInvestors(): BigInt {
    return this.value11;
  }

  getRegisteredAt(): BigInt {
    return this.value12;
  }

  getLastActivityAt(): BigInt {
    return this.value13;
  }
}

export class BusinessRegistry__getBusinessHealthResultMetricsStruct extends ethereum.Tuple {
  get repaymentRate(): BigInt {
    return this[0].toBigInt();
  }

  get successRate(): BigInt {
    return this[1].toBigInt();
  }

  get healthScore(): BigInt {
    return this[2].toBigInt();
  }
}

export class BusinessRegistry__getBusinessProfileResultValue0Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get metadataURI(): string {
    return this[1].toString();
  }

  get owner(): Address {
    return this[2].toAddress();
  }

  get verified(): boolean {
    return this[3].toBoolean();
  }

  get totalRaised(): BigInt {
    return this[4].toBigInt();
  }

  get totalRepaid(): BigInt {
    return this[5].toBigInt();
  }

  get onTimePayments(): BigInt {
    return this[6].toBigInt();
  }

  get latePayments(): BigInt {
    return this[7].toBigInt();
  }

  get defaultedAmount(): BigInt {
    return this[8].toBigInt();
  }

  get campaignCount(): BigInt {
    return this[9].toBigInt();
  }

  get successfulCampaigns(): BigInt {
    return this[10].toBigInt();
  }

  get activeInvestors(): BigInt {
    return this[11].toBigInt();
  }

  get registeredAt(): BigInt {
    return this[12].toBigInt();
  }

  get lastActivityAt(): BigInt {
    return this[13].toBigInt();
  }
}

export class BusinessRegistry extends ethereum.SmartContract {
  static bind(address: Address): BusinessRegistry {
    return new BusinessRegistry("BusinessRegistry", address);
  }

  businessNameToAddress(param0: string): Address {
    let result = super.call(
      "businessNameToAddress",
      "businessNameToAddress(string):(address)",
      [ethereum.Value.fromString(param0)],
    );

    return result[0].toAddress();
  }

  try_businessNameToAddress(param0: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "businessNameToAddress",
      "businessNameToAddress(string):(address)",
      [ethereum.Value.fromString(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  businesses(param0: Address): BusinessRegistry__businessesResult {
    let result = super.call(
      "businesses",
      "businesses(address):(string,string,address,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new BusinessRegistry__businessesResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toAddress(),
      result[3].toBoolean(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toBigInt(),
      result[11].toBigInt(),
      result[12].toBigInt(),
      result[13].toBigInt(),
    );
  }

  try_businesses(
    param0: Address,
  ): ethereum.CallResult<BusinessRegistry__businessesResult> {
    let result = super.tryCall(
      "businesses",
      "businesses(address):(string,string,address,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BusinessRegistry__businessesResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toAddress(),
        value[3].toBoolean(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
        value[10].toBigInt(),
        value[11].toBigInt(),
        value[12].toBigInt(),
        value[13].toBigInt(),
      ),
    );
  }

  getBusinessHealth(
    business: Address,
  ): BusinessRegistry__getBusinessHealthResultMetricsStruct {
    let result = super.call(
      "getBusinessHealth",
      "getBusinessHealth(address):((uint256,uint256,uint256))",
      [ethereum.Value.fromAddress(business)],
    );

    return changetype<BusinessRegistry__getBusinessHealthResultMetricsStruct>(
      result[0].toTuple(),
    );
  }

  try_getBusinessHealth(
    business: Address,
  ): ethereum.CallResult<BusinessRegistry__getBusinessHealthResultMetricsStruct> {
    let result = super.tryCall(
      "getBusinessHealth",
      "getBusinessHealth(address):((uint256,uint256,uint256))",
      [ethereum.Value.fromAddress(business)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<BusinessRegistry__getBusinessHealthResultMetricsStruct>(
        value[0].toTuple(),
      ),
    );
  }

  getBusinessProfile(
    business: Address,
  ): BusinessRegistry__getBusinessProfileResultValue0Struct {
    let result = super.call(
      "getBusinessProfile",
      "getBusinessProfile(address):((string,string,address,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromAddress(business)],
    );

    return changetype<BusinessRegistry__getBusinessProfileResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getBusinessProfile(
    business: Address,
  ): ethereum.CallResult<BusinessRegistry__getBusinessProfileResultValue0Struct> {
    let result = super.tryCall(
      "getBusinessProfile",
      "getBusinessProfile(address):((string,string,address,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromAddress(business)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<BusinessRegistry__getBusinessProfileResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  isRegistered(business: Address): boolean {
    let result = super.call("isRegistered", "isRegistered(address):(bool)", [
      ethereum.Value.fromAddress(business),
    ]);

    return result[0].toBoolean();
  }

  try_isRegistered(business: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isRegistered", "isRegistered(address):(bool)", [
      ethereum.Value.fromAddress(business),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isVerified(business: Address): boolean {
    let result = super.call("isVerified", "isVerified(address):(bool)", [
      ethereum.Value.fromAddress(business),
    ]);

    return result[0].toBoolean();
  }

  try_isVerified(business: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isVerified", "isVerified(address):(bool)", [
      ethereum.Value.fromAddress(business),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalBusinesses(): BigInt {
    let result = super.call(
      "totalBusinesses",
      "totalBusinesses():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_totalBusinesses(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalBusinesses",
      "totalBusinesses():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalVerifiedBusinesses(): BigInt {
    let result = super.call(
      "totalVerifiedBusinesses",
      "totalVerifiedBusinesses():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_totalVerifiedBusinesses(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalVerifiedBusinesses",
      "totalVerifiedBusinesses():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  verifiers(param0: Address): boolean {
    let result = super.call("verifiers", "verifiers(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBoolean();
  }

  try_verifiers(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("verifiers", "verifiers(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddVerifierCall extends ethereum.Call {
  get inputs(): AddVerifierCall__Inputs {
    return new AddVerifierCall__Inputs(this);
  }

  get outputs(): AddVerifierCall__Outputs {
    return new AddVerifierCall__Outputs(this);
  }
}

export class AddVerifierCall__Inputs {
  _call: AddVerifierCall;

  constructor(call: AddVerifierCall) {
    this._call = call;
  }

  get verifier(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddVerifierCall__Outputs {
  _call: AddVerifierCall;

  constructor(call: AddVerifierCall) {
    this._call = call;
  }
}

export class IncrementCampaignCountCall extends ethereum.Call {
  get inputs(): IncrementCampaignCountCall__Inputs {
    return new IncrementCampaignCountCall__Inputs(this);
  }

  get outputs(): IncrementCampaignCountCall__Outputs {
    return new IncrementCampaignCountCall__Outputs(this);
  }
}

export class IncrementCampaignCountCall__Inputs {
  _call: IncrementCampaignCountCall;

  constructor(call: IncrementCampaignCountCall) {
    this._call = call;
  }

  get business(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class IncrementCampaignCountCall__Outputs {
  _call: IncrementCampaignCountCall;

  constructor(call: IncrementCampaignCountCall) {
    this._call = call;
  }
}

export class RegisterBusinessCall extends ethereum.Call {
  get inputs(): RegisterBusinessCall__Inputs {
    return new RegisterBusinessCall__Inputs(this);
  }

  get outputs(): RegisterBusinessCall__Outputs {
    return new RegisterBusinessCall__Outputs(this);
  }
}

export class RegisterBusinessCall__Inputs {
  _call: RegisterBusinessCall;

  constructor(call: RegisterBusinessCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get metadataURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RegisterBusinessCall__Outputs {
  _call: RegisterBusinessCall;

  constructor(call: RegisterBusinessCall) {
    this._call = call;
  }
}

export class RegisterBusinessForCall extends ethereum.Call {
  get inputs(): RegisterBusinessForCall__Inputs {
    return new RegisterBusinessForCall__Inputs(this);
  }

  get outputs(): RegisterBusinessForCall__Outputs {
    return new RegisterBusinessForCall__Outputs(this);
  }
}

export class RegisterBusinessForCall__Inputs {
  _call: RegisterBusinessForCall;

  constructor(call: RegisterBusinessForCall) {
    this._call = call;
  }

  get businessOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get metadataURI(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class RegisterBusinessForCall__Outputs {
  _call: RegisterBusinessForCall;

  constructor(call: RegisterBusinessForCall) {
    this._call = call;
  }
}

export class RemoveVerifierCall extends ethereum.Call {
  get inputs(): RemoveVerifierCall__Inputs {
    return new RemoveVerifierCall__Inputs(this);
  }

  get outputs(): RemoveVerifierCall__Outputs {
    return new RemoveVerifierCall__Outputs(this);
  }
}

export class RemoveVerifierCall__Inputs {
  _call: RemoveVerifierCall;

  constructor(call: RemoveVerifierCall) {
    this._call = call;
  }

  get verifier(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveVerifierCall__Outputs {
  _call: RemoveVerifierCall;

  constructor(call: RemoveVerifierCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateBusinessMetadataCall extends ethereum.Call {
  get inputs(): UpdateBusinessMetadataCall__Inputs {
    return new UpdateBusinessMetadataCall__Inputs(this);
  }

  get outputs(): UpdateBusinessMetadataCall__Outputs {
    return new UpdateBusinessMetadataCall__Outputs(this);
  }
}

export class UpdateBusinessMetadataCall__Inputs {
  _call: UpdateBusinessMetadataCall;

  constructor(call: UpdateBusinessMetadataCall) {
    this._call = call;
  }

  get newURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class UpdateBusinessMetadataCall__Outputs {
  _call: UpdateBusinessMetadataCall;

  constructor(call: UpdateBusinessMetadataCall) {
    this._call = call;
  }
}

export class UpdateBusinessMetricsCall extends ethereum.Call {
  get inputs(): UpdateBusinessMetricsCall__Inputs {
    return new UpdateBusinessMetricsCall__Inputs(this);
  }

  get outputs(): UpdateBusinessMetricsCall__Outputs {
    return new UpdateBusinessMetricsCall__Outputs(this);
  }
}

export class UpdateBusinessMetricsCall__Inputs {
  _call: UpdateBusinessMetricsCall;

  constructor(call: UpdateBusinessMetricsCall) {
    this._call = call;
  }

  get business(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get raised(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get repaid(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get onTime(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class UpdateBusinessMetricsCall__Outputs {
  _call: UpdateBusinessMetricsCall;

  constructor(call: UpdateBusinessMetricsCall) {
    this._call = call;
  }
}

export class VerifyBusinessCall extends ethereum.Call {
  get inputs(): VerifyBusinessCall__Inputs {
    return new VerifyBusinessCall__Inputs(this);
  }

  get outputs(): VerifyBusinessCall__Outputs {
    return new VerifyBusinessCall__Outputs(this);
  }
}

export class VerifyBusinessCall__Inputs {
  _call: VerifyBusinessCall;

  constructor(call: VerifyBusinessCall) {
    this._call = call;
  }

  get business(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class VerifyBusinessCall__Outputs {
  _call: VerifyBusinessCall;

  constructor(call: VerifyBusinessCall) {
    this._call = call;
  }
}
